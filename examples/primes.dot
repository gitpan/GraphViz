digraph test {
	node1 -> node2 [color="0,1,0.00240963855421687", len="2", w="99.7590361445783"];
	node2 -> node3 [color="0,1,0.00240963855421687", len="2", w="99.7590361445783"];
	node3 -> node4 [color="0,1,0.00240963855421687", len="2", w="99.7590361445783"];
	node4 -> node5 [color="0,1,0.00240963855421687", len="2", w="99.7590361445783"];
	node5 -> node6 [color="0,1,0.00240963855421687", len="2", w="99.7590361445783"];
	node6 -> node7 [color="0,1,0.00240963855421687", len="2", w="99.7590361445783"];
	node7 -> node8 [color="0,1,0.00240963855421687", len="2", w="99.7590361445783"];
	node9 -> node8 [color="0,1,0.00240963855421687", len="2", w="99.7590361445783"];
	node10 -> node8 [color="0,1,0.0168674698795181", len="2", w="98.3132530120482"];
	node8 -> node11 [color="0,1,0.0240963855421687", len="2", w="97.5903614457831"];
	node11 -> node12 [color="0,1,0.0265060240963855", len="2", w="97.3493975903614"];
	node12 -> node13 [color="0,1,0.0289156626506024", len="2", w="97.1084337349398"];
	node13 -> node14 [color="0,1,0.0313253012048193", len="2", w="96.8674698795181"];
	node14 -> node15 [color="0,1,0.0337349397590361", len="2", w="96.6265060240964"];
	node15 -> node9 [color="0,1,0.036144578313253", len="2", w="96.3855421686747"];
	node9 -> node8 [color="0,1,0.0337349397590361", len="2", w="96.6265060240964"];
	node10 -> node8 [color="0,1,0.00481927710843374", len="2", w="99.5180722891566"];
	node8 -> node11 [color="0,1,0.0409638554216867", len="2", w="95.9036144578313"];
	node11 -> node16 [color="0,1,0.0433734939759036", len="2", w="95.6626506024096"];
	node16 -> node10 [color="0,1,0.0457831325301205", len="2", w="95.421686746988"];
	node10 -> node10 [color="0,1,0.0481927710843374", len="2", w="95.1807228915663"];
	node17 -> node18 [color="0,1,0.00240963855421687", len="2", w="99.7590361445783"];
	node19 -> node18 [color="0,1,0.0602409638554217", len="2", w="93.9759036144578"];
	node20 -> node18 [color="0,1,0.00240963855421687", len="2", w="99.7590361445783"];
	node20 -> node18 [color="0,1,0.178313253012048", len="2", w="82.1686746987952"];
	node18 -> node21 [color="0,1,0.240963855421687", len="2", w="75.9036144578313"];
	node22 -> node19 [color="0,1,0.00963855421686747", len="2", w="99.0361445783133"];
	node22 -> node19 [color="0,1,0.0506024096385542", len="2", w="94.9397590361446"];
	node21 -> node23 [color="0,1,0.240963855421687", len="2", w="75.9036144578313"];
	node23 -> node24 [color="0,1,0.240963855421687", len="2", w="75.9036144578313"];
	node24 -> node20 [color="0,1,0.00240963855421687", len="2", w="99.7590361445783"];
	node24 -> node25 [color="0,1,0.23855421686747", len="2", w="76.144578313253"];
	node26 -> node25 [color="0,1,0.812048192771084", len="2", w="18.7951807228916"];
	node25 -> node27 [color="0,1,1", len="2", w="0"];
	node27 -> node22 [color="0,1,0.00963855421686747", len="2", w="99.0361445783133"];
	node27 -> node26 [color="0,1,0.990361445783133", len="2", w="0.963855421686743"];
	node26 -> node20 [color="0,1,0.178313253012048", len="2", w="82.1686746987952"];
	node25 -> node28 [color="0,1,0.0506024096385542", len="2", w="94.9397590361446"];
	node28 -> node29 [color="0,1,0.0506024096385542", len="2", w="94.9397590361446"];
	node29 -> node22 [color="0,1,0.0506024096385542", len="2", w="94.9397590361446"];
	node14 [color="0,1,0", label="$node->{label} = $node->{name};"];
	node5 [color="0,1,0", label="$self->{EDGES} = [];"];
	node4 [color="0,1,0", label="$self->{NODES} = {};"];
	node15 [color="0,1,0", label="$self->{NODES}->{$node->{name}} = $node;"];
	node17 [color="0,1,0.000850319862365722", label="@known=qw(2 3 5 7);"];
	node6 [color="0,1,0", label="bless($self, $class);"];
	node28 [color="0,1,0.666666666666667", label="for ($known[-1]..int(sqrt($n))) {"];
	node18 [color="0,1,0", label="for (1..100) {"];
	node25 [color="0,1,0.333333333333333", label="for (1..scalar(@known)) {"];
	node24 [color="0,1,0", label="if ($n < 2) {"];
	node27 [color="0,1,0.666666666666667", label="if ($n==$known[$_-1]) {"];
	node26 [color="0,1,0.31396504243215", label="if (($n/$known[$_-1]) == int($n/$known[$_-1])) {"];
	node21 [color="0,1,0.333333333333333", label="if (check_prime($_)) {"];
	node16 [color="0,1,0", label="if (not exists $node->{from} or not exists $node->{to}) {"];
	node13 [color="0,1,0", label="if (not exists $node->{label}) {"];
	node12 [color="0,1,0", label="if (not exists $node->{name}) {"];
	node2 [color="0,1,0", label="my $class = ref($proto) || $proto;"];
	node11 [color="0,1,0", label="my $node = shift;"];
	node1 [color="0,1,0.000615874926249186", label="my $proto = shift;"];
	node8 [color="0,1,0", label="my $self = shift;"];
	node3 [color="0,1,0", label="my $self = {};"];
	node23 [color="0,1,0", label="my ($n)=@_;"];
	node10 [color="0,1,0.171911120414734", label="push @{$self->{EDGES}}, $node;"];
	node29 [color="0,1,0", label="push(@known,$n);"];
	node9 [color="0,1,0.0441746711730957", label="return $node->{name};"];
	node7 [color="0,1,0.666666666666667", label="return $self;"];
	node20 [color="0,1,0.000615874926249186", label="return 0;"];
	node22 [color="0,1,0.00260655085245768", label="return 1;"];
	node19 [color="0,1,0.111471613248189", label="warn \"$_ is prime\n\";"];
}
